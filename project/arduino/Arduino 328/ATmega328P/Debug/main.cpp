#line 1 "../main.ino"
#include <Arduino.h>
#line 1
/* Main.ino file generated by New Project wizard
 *
 * Created:   Thu Sep 5 2013
 * Processor: ATmega328P
 * Compiler:  Arduino AVR
 */

 //notas musicales
#include <freqNotes.h>
//necesario para el display
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
void setup ();
void loop ();
void wellcomeTest ();
void doEncoder ();
#line 15

unsigned int bpm = 100;
unsigned int metronomePulse = 10;
unsigned long lastTime = 0;  //guarda tiempo de referencia para comparar
unsigned long msTempo = 0;
boolean tick = true;
byte outputValue = 0;

unsigned int encPos = 0;

//config LCD
#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);

const unsigned char bmMetronome [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x7f, 0xf8, 0x03, 0x00, 0xe0, 0x1c, 0x07, 
	0x00, 0xe0, 0x1c, 0x0e, 0x00, 0xc3, 0x0c, 0x7c, 0x00, 0xc3, 0x0c, 0x98, 0x01, 0xc0, 0x0e, 0x84, 
	0x01, 0x83, 0x06, 0x44, 0x01, 0x80, 0x06, 0xf4, 0x03, 0x83, 0x07, 0xc0, 0x03, 0x80, 0x03, 0x80, 
	0x03, 0x03, 0x07, 0x00, 0x03, 0x00, 0x0f, 0x80, 0x07, 0x03, 0x1f, 0x80, 0x06, 0x03, 0x1d, 0x80, 
	0x06, 0x03, 0x39, 0x80, 0x0e, 0x03, 0x71, 0xc0, 0x0e, 0x03, 0xe0, 0xc0, 0x0c, 0x0f, 0xc0, 0xc0, 
	0x1c, 0x10, 0x30, 0xe0, 0x1c, 0x20, 0x10, 0x60, 0x18, 0x40, 0x08, 0x60, 0x18, 0x40, 0x08, 0x60, 
	0x38, 0x7f, 0xf8, 0x70, 0x3c, 0x00, 0x00, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xf8, 
	0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 
	0x7f, 0xff, 0xff, 0xf8
};

#if (SSD1306_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif

void setup()
 { 
	pinMode(13,OUTPUT);
	pinMode(12,OUTPUT); //buzzer
	pinMode(11,OUTPUT); //buzzer
	
	pinMode(2,INPUT);
	pinMode(1,INPUT);
	
	attachInterrupt(0, doEncoder, CHANGE);
	
	//TEST PANTALLA
	// by default, we'll generate the high voltage from the 3.3v line internally! (neat!)
	display.begin(SSD1306_SWITCHCAPVCC, 0x3D);  // initialize with the I2C addr 0x3D (for the 128x64)
	// init done
	  
    // Clear the buffer.
	display.clearDisplay();
	

	wellcomeTest();
	
 }

void loop()
 { 
	
	//prueba de generar un tono
	tone(11,NOTE_B0);
	
	//ms of actual tempo
	msTempo = (60000/bpm);
	
	if ((millis()-lastTime) >= msTempo)
	{
		tick = true;
		lastTime = millis();
		 outputValue++;
	}
	
	//refresh tick
	if (tick){
		digitalWrite(13, HIGH);
		tone(12,NOTE_A4,100);
		tick = false;
	}
	else{
		digitalWrite(13, LOW);
		noTone(12);
	}

	display.clearDisplay();
	display.setCursor(0,0);
	display.print(encPos); 
	display.display();
 }
 
 //funcion que realiza mensaje de inicio y test luces
void wellcomeTest()
{
	unsigned char welcome[] = {'B','e','a','t','D','u','i','n','o'};
	//unsigned char welcome2[] = {'v','e','r',' ',majorVersion+48,'.',minorVersion+48};
	unsigned char welcome3[] = {'b','y',' ','W','a','r','r','i','o','r'};
	
	int frames = 0;
	
	
	display.clearDisplay();
	display.setTextSize(1);
	display.setTextColor(WHITE);
    
    display.setCursor(0,0);
    for (int i=0;i<9;i++)
	{
		display.print(char(welcome[i]));
		display.display();
		delay(25);
		frames++;
	}
		
    /*display.setCursor(0,1);
	for (int i=0;i<7;i++)
	{
		lcd.print(char(welcome2[i]));
		delay(25);
		frames++;
	}*/
	
	delay(1000);
	
	display.print("\n");
	for (int i=0;i<10;i++)
	{
		display.print(char(welcome3[i]));
		display.display();
		delay(25);
		frames++;
	}
	
	delay(1000);
	
	display.drawBitmap(90, 20,  bmMetronome, 32, 33, 2);
	display.display();
	
	delay(1000);
}

void doEncoder()
{
  
  if (digitalRead(1) == digitalRead(2)) 
	encPos++;
  else
 	encPos--;
  
}